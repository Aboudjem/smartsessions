// SPDX-License-Identifier: MIT
pragma solidity ^0.8.23;

import { Test } from "forge-std/Test.sol";
import {
    RhinestoneModuleKit,
    ModuleKitHelpers,
    ModuleKitUserOp,
    AccountInstance,
    UserOpData
} from "modulekit/ModuleKit.sol";
import { MODULE_TYPE_VALIDATOR, MODULE_TYPE_EXECUTOR, Execution } from "modulekit/external/ERC7579.sol";
import { PermissionManager } from "contracts/validators/PermissionManager.sol";
import { SimpleSigner } from "contracts/test/mocks/SimpleSigner.sol";
import { UsageLimitPolicy } from "contracts/test/mocks/UsageLimitPolicy.sol";
import { SimpleGasPolicy } from "contracts/test/mocks/SimpleGasPolicy.sol";
import { TimeFramePolicy } from "contracts/test/mocks/TimeFramePolicy.sol";
import { Counter } from "contracts/test/Counter.sol";
import { MockValidator } from "contracts/test/mocks/MockValidator.sol";
import { EIP1271_MAGIC_VALUE, IERC1271 } from "module-bases/interfaces/IERC1271.sol";
import { UserOperationBuilder } from "contracts/utils/UserOpBuilder.sol";
import { ModeLib } from "contracts/utils/lib/ModeLib.sol";

import "forge-std/console2.sol";

contract PermissionManagerBaseTest is RhinestoneModuleKit, Test {
    using ModuleKitHelpers for *;
    using ModuleKitUserOp for *;

    // account and modules
    AccountInstance internal instance;
    PermissionManager internal permissionManager;
    MockValidator mockValidator;

    bytes32 signerId;

    SimpleSigner internal simpleSignerValidator;
    address sessionSigner1;
    uint256 sessionSigner1Pk;
    address sessionSigner2;
    uint256 sessionSigner2Pk;
    address owner;
    uint256 ownerPk;

    UsageLimitPolicy internal usageLimitPolicy;
    SimpleGasPolicy internal simpleGasPolicy;
    TimeFramePolicy internal timeFramePolicy;

    Counter counterContract;

    function setUp() public {
        init();
    }
}
